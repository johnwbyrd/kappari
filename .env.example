# Kappari - Paprika API Client Configuration
# Copy this file to .env and fill in your actual values

# ===========================================
# PAPRIKA INSTALLATION LOCATION
# ===========================================
# Path to your Paprika Recipe Manager 3 data folder
# This is the root directory containing Database/, Photos/, etc.
# subdirectories
# 
# Platform defaults (auto-detected if this directory exists):
#   Windows: %LOCALAPPDATA%\Paprika Recipe Manager 3
#   macOS:   ~/Library/Application Support/Paprika Recipe Manager 3
#   Linux:   No default - you must specify this path
#
# If not set and no platform default found, you must specify individual
# file paths below. All _DIR/_FILE paths below can be absolute or relative
# to this directory
# KAPPARI_ROOT_DIR=/path/to/Paprika Recipe Manager 3

# ===========================================
# AUTHENTICATION & CREDENTIALS
# ===========================================
# Your Paprika account email address
# If not set, Kappari will attempt to read it from the SyncEmail setting
# in your database. Required for API authentication and sync operations
KAPPARI_EMAIL=your_email@example.com

# Your Paprika account password
# Required for API authentication - no fallback available
# Used to generate JWT tokens for API access
KAPPARI_PASSWORD=your_password_here

# Device ID for license validation
# Must match the device UUID where Paprika 3 was originally licensed
# Used for RSA signature verification of license data stored in database
# 
# How to find your Device ID:
#   Windows: HKLM\SOFTWARE\Microsoft\Cryptography\MachineGuid 
#            or HKCU\SOFTWARE\Hindsight Labs LLC\Paprika Recipe Manager 3\InstallUid
#   macOS:   IOPlatformUUID from IOKit framework  
#   Linux:   /etc/machine-id or /var/lib/dbus/machine-id
#   iOS:     identifierForVendor or keychain-stored UUID
#   Android: Settings.Secure.ANDROID_ID or stored UUID
KAPPARI_DEVICE_ID=00000000-0000-0000-0000-000000000000

# Advanced: License decryption keys (change only if you know what you're
# doing). These are AES encryption keys used to decrypt license data from
# the database. Default values work for standard Paprika installations
# KAPPARI_PURCHASE_DATA_KEY=Purchase Data
# KAPPARI_PURCHASE_SIGNATURE_KEY=Purchase Signature

# JWT token persistence (SECURITY WARNING)
# When true, saves JWT authentication tokens to this .env file after
# successful login. This keeps you logged in between sessions but stores
# sensitive tokens on disk in plain text. Only enable if you understand
# the security implications for your environment
# KAPPARI_PERSIST_TOKENS=false

# JWT token storage (automatically managed when PERSIST_TOKENS=true)
# Do not set this manually - it will be overwritten
# KAPPARI_JWT_TOKEN=your-jwt-token-here

# ===========================================
# OPERATIONAL MODE
# ===========================================
# Dry-run mode: Log API calls but don't send them
# When true, all network operations are simulated - no actual data is
# sent or received. Useful for testing configurations and understanding
# what the library would do. Accepts: true/false, yes/no, 1/0, on/off
# (case insensitive)
# KAPPARI_DRY_RUN=false

# Mock data mode: Use test data instead of real API calls
# When true, returns predetermined test responses instead of making
# network requests. Only useful for development and testing - requires
# mock data files to be present
# KAPPARI_USE_MOCK_DATA=false

# Mock data directory
# Location of JSON files containing mock API responses for testing
# Directory will be created automatically if KAPPARI_USE_MOCK_DATA=true
# KAPPARI_MOCK_DATA_DIR=./test/mock_data

# ===========================================
# API CONFIGURATION
# ===========================================
# Paprika API base URL
# Should not need to change unless Paprika moves their API
# Must include the API version (currently v2)
# KAPPARI_API_BASE_URL=https://www.paprikaapp.com/api/v2

# HTTP request timeout in seconds
# How long to wait for API responses before timing out
# Increase if you have a slow internet connection
# KAPPARI_API_TIMEOUT=30

# User-Agent string sent with API requests
# Identifies your client to Paprika's servers
# Default mimics Windows Paprika 3 version 3.3.1
# Change if you need to identify your custom implementation
# KAPPARI_USER_AGENT=Paprika Recipe Manager 3/3.3.1 (Microsoft Windows NT 10.0.26100.0)

# ===========================================
# SYNC & WEBSOCKET CONFIGURATION  
# ===========================================
# Enable sync functionality
# When false, disables all synchronization features
# Currently used for configuration only - sync features are not yet
# implemented
# KAPPARI_SYNC_ENABLED=true

# Sync check interval in minutes  
# How often to check for updates from Paprika's servers
# Currently used for configuration only - sync features are not yet
# implemented
# KAPPARI_SYNC_INTERVAL=15

# WebSocket URL for real-time sync
# Used for receiving immediate notifications of changes
# Currently used for configuration only - WebSocket features are not yet
# implemented  
# KAPPARI_WEBSOCKET_URL=wss://www.paprikaapp.com/ws/sync/

# ===========================================
# NETWORK & PROXY CONFIGURATION
# ===========================================
# HTTP/HTTPS proxy settings
# Set these if your network requires proxy access to reach the internet
# Format: http://username:password@proxy.example.com:8080 (auth optional)
# KAPPARI_HTTP_PROXY=http://proxy.example.com:8080
# KAPPARI_HTTPS_PROXY=https://proxy.example.com:8080

# SSL certificate verification
# When false, disables SSL certificate validation for HTTPS requests
# Only disable if you have SSL/TLS issues and understand the security
# risks. Disabling this makes you vulnerable to man-in-the-middle attacks
# KAPPARI_VERIFY_SSL=true

# ===========================================
# STORAGE & FILE PATHS
# ===========================================
# Path Resolution Rules:
# - If you set KAPPARI_ROOT_DIR above, these can be relative paths within
#   that directory
# - Absolute paths (starting with / or C:\) override the root directory
# - If no root directory is set, these must be absolute paths or use the
#   fallback defaults
# - Directories ending in _DIR are created automatically if they don't
#   exist
# - Files ending in _FILE must exist or be creatable by the application

# Database file location  
# Path to Paprika's SQLite database file containing recipes, categories,
# etc. This file must exist and be readable
# Default when KAPPARI_ROOT_DIR is set: Database/Paprika.sqlite
# KAPPARI_DB_FILE=Database/Paprika.sqlite

# Database backup directory
# Where to store database backups before making changes
# Directory will be created automatically if it doesn't exist
# Default when KAPPARI_ROOT_DIR is set: Database/Backups  
# KAPPARI_DB_BACKUP_DIR=Database/Backups

# Photos directory
# Where Paprika stores recipe photos and images
# Used when KAPPARI_STORE_PHOTOS_LOCALLY=true
# Directory will be created automatically if needed
# Default when KAPPARI_ROOT_DIR is set: Photos
# KAPPARI_PHOTOS_DIR=Photos

# Store photos locally instead of just URLs
# When true, downloads and saves recipe photos to KAPPARI_PHOTOS_DIR
# When false, only stores photo URLs from Paprika's servers
# KAPPARI_STORE_PHOTOS_LOCALLY=true

# Local recipes storage directory
# Where to store exported/downloaded recipe files
# Directory will be created automatically
# Default: ./recipes (in current working directory)
# KAPPARI_RECIPES_LOCAL_DIR=recipes

# ===========================================
# CACHE CONFIGURATION
# ===========================================
# Enable local caching for improved performance
# When true, caches API responses and database queries to speed up
# repeated operations. Cached data is stored in KAPPARI_CACHE_DIR
# KAPPARI_CACHE_ENABLED=true

# Cache storage directory
# Where to store cached API responses and temporary files
# Directory will be created automatically if caching is enabled
# Default: ./cache (in current working directory)
# KAPPARI_CACHE_DIR=cache

# Cache time-to-live in seconds
# How long to keep cached data before considering it stale
# 3600 = 1 hour, 86400 = 24 hours
# Longer values improve performance but may serve outdated data
# KAPPARI_CACHE_TTL=3600

# ===========================================
# LOGGING & DEBUG
# ===========================================
# Log level for console and file output
# Controls verbosity of logging messages
# Values: DEBUG, INFO, WARNING, ERROR, CRITICAL (case sensitive)  
# DEBUG shows all messages including detailed API calls and database
# queries. INFO shows general operational messages (recommended for normal
# use). WARNING and above only show problems and errors
# KAPPARI_LOG_LEVEL=INFO

# Log files directory
# Where to write log files for troubleshooting and debugging  
# Directory will be created automatically
# Uses size-based log rotation: main.log (10MB max, 5 backups) and
# errors.log (5MB max, 3 backups)
# Default: ./logs (in current working directory)
# KAPPARI_LOG_DIR=Logs

# Enable detailed API request/response logging
# When true, logs full HTTP request and response details including
# headers and bodies. Useful for debugging API issues but generates very
# verbose output. WARNING: May log sensitive data like passwords and
# tokens - use carefully
# KAPPARI_DEBUG_API_REQUESTS=false

# Enable SQL query logging  
# When true, logs all database queries executed against the Paprika
# database. Useful for debugging database issues and understanding what
# data is being accessed. Can generate high volume of log messages during
# database operations
# KAPPARI_DEBUG_SQL_QUERIES=false

# Pretty-print JSON in logs
# When true, formats JSON data with indentation for easier reading
# When false, logs JSON as compact single-line strings  
# Pretty printing makes logs easier to read but larger in size
# KAPPARI_PRETTY_JSON=true