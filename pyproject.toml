[build-system]
requires = ["setuptools", "wheel"]

[project]
name = "kappari"
version = "0.1.0"
description = "Paprika Recipe Manager API documentation and implementation"
readme = "README.md"
license = {file = "LICENSE.md"}
authors = [
    {name = "Contributors"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "pycryptodome>=3.15.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
]

[tool.setuptools.packages.find]
include = ["kappari*"]
exclude = ["tests*"]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.0.0",
]

[tool.ruff]
target-version = "py38"
include = ["kappari/**/*.py", "*.py"]
line-length = 79

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "T20", # flake8-print (ban print statements)
    "RET", # flake8-return
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate (commented code)
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value in comparison
    "PLR0915", # Too many statements (we have complex init functions)
    "PLW0603", # Global statement usage (legitimate singleton patterns)
]

[tool.ruff.lint.isort]
known-local-folder = ["kappari"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "requires_credentials: test requires KAPPARI_EMAIL and KAPPARI_PASSWORD",
    "requires_database: test requires Paprika database file to exist", 
    "requires_network: test makes actual network requests",
]